{"version":3,"file":"injection.service.d.ts","sources":["injection.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Injector, Type } from '@angular/core';\r\nexport declare class MzInjectionService {\r\n    private applicationRef;\r\n    private componentFactoryResolver;\r\n    private injector;\r\n    private container;\r\n    constructor(applicationRef: ApplicationRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector);\r\n    /**\r\n     * Appends a component to an adjacent location.\r\n     */\r\n    appendComponent<T>(componentClass: Type<T>, options?: any, location?: Element): ComponentRef<T>;\r\n    /**\r\n     * Overrides the default container element.\r\n     */\r\n    setRootViewContainer(container: Element): void;\r\n    /**\r\n     * Gets the html element for a component ref.\r\n     */\r\n    private getComponentRootNode(componentRef);\r\n    /**\r\n     * Gets the container element.\r\n     */\r\n    private getContainerElement();\r\n    /**\r\n     * Projects the inputs onto the component.\r\n     */\r\n    private projectComponentInputs<T>(component, options);\r\n}\r\n"]}